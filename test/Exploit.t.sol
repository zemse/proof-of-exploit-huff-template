// SPDX-License-Identifier: Unlicense
pragma solidity ^0.8.15;

import "foundry-huff/HuffDeployer.sol";
import "forge-std/Test.sol";
import "forge-std/console.sol";

import "src/Challenge.sol";
import "src/Exploit.sol";
import "src/Vault.sol";

contract ExploitTest is Test {
    address challengeAddress = 0xfEeDC0DE00000000000000000000000000000000;
    address exploitAddress = 0xBAda550000000000000000000000000000000000;

    function setUp() public {
        vm.createSelectFork(
            vm.envString("ETH_RPC_URL"),
            vm.envUint("FORK_BLOCK_NUMBER")
        );

        vm.etch(challengeAddress, type(Challenge).runtimeCode);

        // vm.etch(exploitAddress, type(Exploit).runtimeCode);
        vm.etch(exploitAddress, HuffDeployer.config().runtime_code("Exploit"));
    }

    function testExploit() public {
        vm.deal(exploitAddress, 0.1 ether);
        Challenge(challengeAddress).entryPoint();
    }
}
