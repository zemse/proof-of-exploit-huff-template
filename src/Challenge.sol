// SPDX-License-Identifier: Unlicense
pragma solidity ^0.8.0;

/// @title The Challenge contract
/// @notice This source code is published along with the zk proof.
contract Challenge {
    bool solved;

    // Vault on sepolia network.
    address constant vault = 0x1d3A2100B568687Bc18bcB2eC684e520893527c2;

    /// @notice Proof of eXploit constructs a block with single tx calling
    /// this function.
    function entryPoint() public {
        // Pre-exploit information, already public
        assert(vault.balance == 1 ether);

        // Trigger the exploit.
        exploit();

        // Post-exploit information
        assert(vault.balance < 2 wei);

        // Proof of eXploit zkEVM requires that slot0 of challenge contract
        // to become 1. This involves the executing the entryPoint function
        // such that it reaches here without reversion.
        solved = true;
    }

    // Execute badass EVM code.
    function exploit() private {
        (bool success, ) = address(0xBAda550000000000000000000000000000000000)
            .call("");
        require(success);
    }
}
